include "telemetry.conf"

akka {
  loglevel = DEBUG
  actor {
    provider = "cluster"
    serialization-bindings {
      "org.wm.CborSerializable" = jackson-cbor
    }
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka://kafkaProjection@127.0.0.1:2551"
      //"akka://kafkaProjection@127.0.0.1:2552"
    ]
    min-nr-of-members = 1
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    sharding {
      retry-interval = 200ms
      waiting-for-state-timeout = 200ms
    }
  }
  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
    }
  }

  projection.r2dbc {

    use-connection-factory = "my-connection-factory"
    offset-store {
      time-window = 1 minutes
    }
  }
}


akka.persistence.r2dbc.connection-factory = ${akka.persistence.r2dbc.postgres}
akka.persistence.journal.plugin = "akka.persistence.r2dbc.journal"
akka.persistence.snapshot-store.plugin = "akka.persistence.r2dbc.snapshot"
akka.persistence.state.plugin = "akka.persistence.r2dbc.state"

akka.persistence.r2dbc.connection-factory = {
  # overrides for default values from the 'akka.persistence.r2dbc.postgres' config block
  host = "localhost"
  host = ${?DB_HOST}
  database = "postgres"
  database = ${?DB_NAME}
  user = "postgres"
  user = ${?DB_USER}
  password = "postgres"
  password = ${?DB_PASSWORD}

  # Initial pool size.
  initial-size = 10
  # Maximum pool size.
  max-size = 50
}
our-kafka-consumer: ${akka.kafka.consumer} {
  kafka-clients {
    bootstrap.servers = "localhost:9092"
  }
}

my-connection-factory = ${akka.persistence.r2dbc.postgres}
my-connection-factory {
  host = "localhost"
  host = ${?DB_HOST}
  database = "postgres"
  database = ${?DB_NAME}
  user = "postgres"
  user = ${?DB_USER}
  password = "postgres"
  password = ${?DB_PASSWORD}
  initial-size = 5
  # Maximum pool size.
  max-size = 10
}